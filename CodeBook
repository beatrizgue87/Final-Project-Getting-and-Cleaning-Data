CodeBook

Coursera Final Project: Getting & Cleaning Data based on Human Activity Recognition Using Smartphones Dataset

The purpose of this project is to demonstrate the skills to collect, work with, and clean a data set.

Description:

The experiments have been carried out with a group of 30 volunteers within an age range of 19-48 years. Using the cellphone’s embedded accelerometer and gyroscope, the 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz are captured.
Each person is wearing a smartphone (Samsung Galaxy S II) on the waist and performed six activities:

    • Walking (1)
    • Walking_upstairs (2)
    • Walking_downstairs (3)
    • Sitting (4)
    • Standing (5)
    • Laying (6)


Dataset:

Here is the data for the project:
https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip 

The obtained dataset has been randomly partitioned into two sets, where 70% of the volunteers was selected for generating the training data and 30% the test data.

Feature Selection:

The features selected for this database come from the accelerometer and gyroscope 3-axial raw signals tAcc-XYZ and tGyro-XYZ. These time domain signals (prefix 't' to denote time) were captured at a constant rate of 50 Hz. Similarly, the acceleration signal was then separated into body and gravity acceleration signals (tBodyAcc-XYZ and tGravityAcc-XYZ).

Subsequently, the body linear acceleration and angular velocity were derived in time to obtain Jerk signals (tBodyAccJerk-XYZ and tBodyGyroJerk-XYZ). Also the magnitude of these three-dimensional signals were calculated using the Euclidean norm (tBodyAccMag, tGravityAccMag, tBodyAccJerkMag, tBodyGyroMag, tBodyGyroJerkMag). 

Finally a Fast Fourier Transform (FFT) was applied to some of these signals producing fBodyAcc-XYZ, fBodyAccJerk-XYZ, fBodyGyro-XYZ, fBodyAccJerkMag, fBodyGyroMag, fBodyGyroJerkMag. (Note the 'f' to indicate frequency domain signals). 

These signals were used to estimate variables of the feature vector for each pattern:  
'-XYZ' is used to denote 3-axial signals in the X, Y and Z directions.

tBodyAcc-XYZ
tGravityAcc-XYZ
tBodyAccJerk-XYZ
tBodyGyro-XYZ
tBodyGyroJerk-XYZ
tBodyAccMag
tGravityAccMag
tBodyAccJerkMag
tBodyGyroMag
tBodyGyroJerkMag
fBodyAcc-XYZ
fBodyAccJerk-XYZ
fBodyGyro-XYZ
fBodyAccMag
fBodyAccJerkMag
fBodyGyroMag
fBodyGyroJerkMag

The set of variables that were estimated from these signals are: 

mean(): Mean value
std(): Standard deviation
mad(): Median absolute deviation 
max(): Largest value in array
min(): Smallest value in array
sma(): Signal magnitude area
energy(): Energy measure. Sum of the squares divided by the number of values. 
iqr(): Interquartile range 
entropy(): Signal entropy
arCoeff(): Autorregresion coefficients with Burg order equal to 4
correlation(): correlation coefficient between two signals
maxInds(): index of the frequency component with largest magnitude
meanFreq(): Weighted average of the frequency components to obtain a mean frequency
skewness(): skewness of the frequency domain signal 
kurtosis(): kurtosis of the frequency domain signal 
bandsEnergy(): Energy of a frequency interval within the 64 bins of the FFT of each window.
angle(): Angle between to vectors.

Additional vectors obtained by averaging the signals in a signal window sample. These are used on the angle() variable:

gravityMean
tBodyAccMean
tBodyAccJerkMean
tBodyGyroMean
tBodyGyroJerkMean
Notes: 
- Features are normalized and bounded within [-1,1].
- Each feature vector is a row on the text file.


Data transformation description:
 
What does the run_analysis.R script do?

1-  Merging the training and the test sets to create one data set

a) The first step is to combine these individuals variables :

test<-X_test.txt
testLabels<-y_test.txt (activities)
testSubject<-subject_test.txt (subjects)

The combination of these variables forms the final test set which is called Full_testSet.

b) The same procedure is done with train set’s variables:

train<-X_train.txt
trainLabels<-y_train.txt (activities)
trainSubject<-subject_train.txt (subjects)

c) The combination of these variables forms the final train set which is called Full_trainSet.
d) Finally, both full sets are merged by using the function rbind, creating the full_ds.

2- Extracting only the measurements on the mean and standard deviation for each measurement
       
       a) The mean_std_ds dataframe is generated by using grep() to get the variables that contain mean and std as well as the columns  Activity.Labels and Subject.ID. 


3- Using descriptive activity names to name the activities in the data set

       a) The variable dsWithActivities was created by merging activ_Labels and the previously generated dataframe (mean_std_ds).

4- Appropriately labeling the data set with descriptive variable names.

a) The variable var_names is created in order to storage the columns name of dsWithActivities and use the funtion gsub() to make some changes in the variables name.

5- From the data set in step 4, creating a second, independent tidy data set with the average of each variable for each activity and each subject.

       a) The group_activ_subjects was created using the group_by function and the variables Activity, and Subject.ID from the dataset dsWithActivities.
       b) tidy_dataset represents a dataframe that summarise group_activ_subjects and calculates the mean by group.
       c) The output of the tidy_dataset is written using the write.table function to "final_dataset.txt". 
